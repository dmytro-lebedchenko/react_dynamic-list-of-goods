{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","style","color","name","id","getAll","fetch","then","response","json","App","useState","setGoods","loading","setLoading","hasError","setHasError","isClicked","setIsClicked","isInitialized","setIsInitialized","getGoods","goodsFromServer","a","goodsList","type","onClick","sort","user1","user2","localeCompare","slice","filter","ReactDOM","render","document","getElementById"],"mappings":"qQAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,oBACEC,UAAU,uCADZ,SAMGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBACEF,UAAU,mBAEV,UAAQ,OACRG,MAAO,CAAEC,MAAM,GAAD,OAAKF,EAAKE,QAJ1B,SAMGF,EAAKG,MAJDH,EAAKI,UCZX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,U,MAGxB,ICFMC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOd,EAAP,KAAce,EAAd,KACA,EAA8BD,oBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,EAAkCL,mBAAS,IAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KACA,EAA0CP,oBAAS,GAAnD,mBAAOQ,EAAP,KAAsBC,EAAtB,KAEMC,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACfT,GAAW,GACXE,GAAY,GAFG,kBAKWM,EALX,OAKPE,EALO,OAObZ,EAASY,GACTJ,GAAiB,GACjBN,GAAW,GATE,kDAWbE,GAAY,GACZF,GAAW,GAZE,0DAAH,sDAgBd,OACE,sBAAKhB,UAAU,MAAf,UACE,oBAAIA,UAAU,mBAAd,mCAIA,sBACEA,UAAU,sCADZ,UAME,wBACEA,UAAWA,IACT,kBACA,SACA,UACA,CAAE,aAAce,GAAyB,eAAdI,IAE7BQ,KAAK,SACL,UAAQ,aACRC,QAAS,WACPL,EAAShB,KACTa,EAAa,eAXjB,4BAiBA,wBACEpB,UAAWA,IACT,kBACA,SACA,aACA,CAAE,aAAce,GAAyB,sBAAdI,IAE7BQ,KAAK,SACL,UAAQ,oBACRC,QAAS,WACPL,ED3DHhB,IACJE,MAAK,SAAAV,GAAK,OAAIA,EAAM8B,MACnB,SAACC,EAAOC,GAAR,OAAkBD,EAAMzB,KAAK2B,cAAcD,EAAM1B,SACjD4B,MAAM,EAAG,OCyDHb,EAAa,sBAXjB,gCAiBA,wBACEpB,UAAWA,IACT,kBACA,SACA,YACA,CAAE,aAAce,GAAyB,eAAdI,IAE7BQ,KAAK,SACL,UAAQ,aACRC,QAAS,WACPL,EDrEHhB,IACJE,MAAK,SAAAV,GAAK,OAAIA,EAAMmC,QAAO,SAAAhC,GAAI,MAAmB,QAAfA,EAAKE,aCqEjCgB,EAAa,eAXjB,+BAkBDC,GACI,cAAC,EAAD,CAAWtB,MAAOA,IAEtBgB,GACC,qBACEf,UAAU,sDADZ,yCAWDiB,GACC,qBACEjB,UAAU,qDADZ,gEC5GRmC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8260b583.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul\n    className=\"\n      App__goods-list\n      list__goods\n      content\"\n  >\n    {goods.map(good => (\n      <li\n        className=\"list__goods-item\"\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: `${good.color}` }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods.sort(\n      (user1, user2) => user1.name.localeCompare(user2.name),\n    ).slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import React, { useState } from 'react';\nimport className from 'classnames';\nimport 'bulma/css/bulma.min.css';\nimport { GoodsList } from './GoodsList';\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [isClicked, setIsClicked] = useState('');\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  const getGoods = async (goodsFromServer: Promise<Good[]>) => {\n    setLoading(true);\n    setHasError(false);\n\n    try {\n      const goodsList = await goodsFromServer;\n\n      setGoods(goodsList);\n      setIsInitialized(true);\n      setLoading(false);\n    } catch {\n      setHasError(true);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title title\">\n        Dynamic list of Goods\n      </h1>\n\n      <div\n        className=\"\n          App__options\n          list__options\n          options\"\n      >\n        <button\n          className={className(\n            'options__button',\n            'button',\n            'is-info',\n            { 'is-loading': loading && isClicked === 'all-button' },\n          )}\n          type=\"button\"\n          data-cy=\"all-button\"\n          onClick={() => {\n            getGoods(getAll());\n            setIsClicked('all-button');\n          }}\n        >\n          Load all goods\n        </button>\n\n        <button\n          className={className(\n            'options__button',\n            'button',\n            'is-warning',\n            { 'is-loading': loading && isClicked === 'first-five-button' },\n          )}\n          type=\"button\"\n          data-cy=\"first-five-button\"\n          onClick={() => {\n            getGoods(get5First());\n            setIsClicked('first-five-button');\n          }}\n        >\n          Load 5 first goods\n        </button>\n\n        <button\n          className={className(\n            'options__button',\n            'button',\n            'is-danger',\n            { 'is-loading': loading && isClicked === 'red-button' },\n          )}\n          type=\"button\"\n          data-cy=\"red-button\"\n          onClick={() => {\n            getGoods(getRedGoods());\n            setIsClicked('red-button');\n          }}\n        >\n          Load red goods\n        </button>\n      </div>\n\n      {isInitialized\n        && <GoodsList goods={goods} />}\n\n      {loading && (\n        <div\n          className=\"\n            App__notification\n            notification\n            is-primary\n            is-light\"\n        >\n          Loading data from server...\n        </div>\n      )}\n\n      {hasError && (\n        <div\n          className=\"\n            App__notification\n            notification\n            is-danger\n            is-light\"\n        >\n          Oh, no! Error during loading data from server!\n        </div>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}